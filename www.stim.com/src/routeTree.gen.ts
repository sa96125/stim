/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as protectedIndexImport } from './routes/(protected)/index'
import { Route as protectedSettingsImport } from './routes/(protected)/settings'
import { Route as protectedSearchImport } from './routes/(protected)/search'
import { Route as protectedNotificationsImport } from './routes/(protected)/notifications'
import { Route as authVerifyMobileImport } from './routes/(auth)/verify-mobile'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as protectedPostsIndexImport } from './routes/(protected)/posts.index'
import { Route as protectedPostsRegisterImport } from './routes/(protected)/posts.register'
import { Route as protectedPostsPostIdImport } from './routes/(protected)/posts.$postId'

// Create/Update Routes

const protectedIndexRoute = protectedIndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const protectedSettingsRoute = protectedSettingsImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const protectedSearchRoute = protectedSearchImport.update({
  path: '/search',
  getParentRoute: () => rootRoute,
} as any)

const protectedNotificationsRoute = protectedNotificationsImport.update({
  path: '/notifications',
  getParentRoute: () => rootRoute,
} as any)

const authVerifyMobileRoute = authVerifyMobileImport.update({
  path: '/verify-mobile',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const protectedPostsIndexRoute = protectedPostsIndexImport.update({
  path: '/posts/',
  getParentRoute: () => rootRoute,
} as any)

const protectedPostsRegisterRoute = protectedPostsRegisterImport.update({
  path: '/posts/register',
  getParentRoute: () => rootRoute,
} as any)

const protectedPostsPostIdRoute = protectedPostsPostIdImport.update({
  path: '/posts/$postId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(auth)/login': {
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/verify-mobile': {
      preLoaderRoute: typeof authVerifyMobileImport
      parentRoute: typeof rootRoute
    }
    '/(protected)/notifications': {
      preLoaderRoute: typeof protectedNotificationsImport
      parentRoute: typeof rootRoute
    }
    '/(protected)/search': {
      preLoaderRoute: typeof protectedSearchImport
      parentRoute: typeof rootRoute
    }
    '/(protected)/settings': {
      preLoaderRoute: typeof protectedSettingsImport
      parentRoute: typeof rootRoute
    }
    '/(protected)/': {
      preLoaderRoute: typeof protectedIndexImport
      parentRoute: typeof rootRoute
    }
    '/(protected)/posts/$postId': {
      preLoaderRoute: typeof protectedPostsPostIdImport
      parentRoute: typeof rootRoute
    }
    '/(protected)/posts/register': {
      preLoaderRoute: typeof protectedPostsRegisterImport
      parentRoute: typeof rootRoute
    }
    '/(protected)/posts/': {
      preLoaderRoute: typeof protectedPostsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  authLoginRoute,
  authVerifyMobileRoute,
  protectedNotificationsRoute,
  protectedSearchRoute,
  protectedSettingsRoute,
  protectedIndexRoute,
  protectedPostsPostIdRoute,
  protectedPostsRegisterRoute,
  protectedPostsIndexRoute,
])

/* prettier-ignore-end */
